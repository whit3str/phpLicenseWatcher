name: Build and Push Multi-Platform Docker Images

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

env:
  REGISTRY: ghcr.io

jobs:
  build-linux:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set lowercase repository name
      run: echo "IMAGE_NAME=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Linux image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.linux
        platforms: linux/amd64,linux/arm64,linux/arm/v7
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-linux
        cache-from: type=gha,scope=linux
        cache-to: type=gha,mode=max,scope=linux

  build-windows:
    runs-on: windows-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set lowercase repository name
      shell: powershell
      run: |
        $imageName = "$env:GITHUB_REPOSITORY".ToLower()
        echo "IMAGE_NAME=$imageName" >> $env:GITHUB_ENV

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Windows image
      shell: powershell
      run: |
        $imageName = "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-windows"
        Write-Host "Building Windows image: $imageName"
        
        docker build -f Dockerfile.windows -t $imageName .
        
        if ("${{ github.event_name }}" -ne "pull_request") {
          Write-Host "Pushing Windows image..."
          docker push $imageName
        }

  create-manifest:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    needs: [build-linux, build-windows]
    permissions:
      contents: read
      packages: write

    steps:
    - name: Set lowercase repository name
      run: echo "IMAGE_NAME=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Create and push manifest
      run: |
        export DOCKER_CLI_EXPERIMENTAL=enabled
        
        docker manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-linux \
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-windows
        
        docker manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
